TestNG: TestNG is a unit testing framework. (Testing new generation framework)
Purpose:
  1. TestNG is used to design your test cases in a proper manner or we can say in a systematic way.

TestNG Annotations : Annotations in TestNG always starts with @ tag, and each annotations has to be associated with a
Method at the class level in TestNG.

Below are the preconditions annotations starting with @Before tag
1. @BeforeSuite
2. @BeforeTest
3. @BeforeClass
4. @BeforeMethod

1. @Test - This annotation is used for executing a Test in TestNG

Below are the post conditions annotations starting with @After tag
1. @AfterSuite
2. @AfterTest
3. @AfterClass
4. @AfterMethod

Advantages
1. HTML Report
2. Different Annotations
3. Priorities/Sequence your test cases according to your need
4. Dependency Download automatically
5. Grouping of the test cases as per the need
6. Data Provider
7. Parallel Execution
8. Rerun only failed test cases using failedTestNG.xml file


Priority of Test in TestNG
1. Normally if we don't define the priority at the test level , TestNG will pick the test in alphabetical order
    and then execute it.

2. We can set the priority at the test level so that a particular test will get executed based on the priority defined
3. We use "Priority" keyword to set the priority of the test cases.

Enable and Disable Test case in TestNG
In TestNG if we don't want to run a particular test we can disable that test using below keyword
1. Enable = false
2. Enable = true (This is default from TestNG)

Data Provider:Data Providers are used for Data Driven testing , which means same test can be run through different sets of data.
This is very powerful feature of TestNG and effectively used during the framework development

A Data Provider is a method annotated with @DataProvider.

Parallel Execution In TestNG
->We can achieve parallel execution in TestNG at different level
1. At method level, by providing the thread count value
Thread Count : Thread count is nothing but an instance which will assign to one test.
so example - if we give 3 thread count , then at a time 3 test case will get assigned and execute.
<suite name="Grouping Test" parallel="methods" thread-count="3">

2. At the class level
<suite name="Grouping Test" parallel="classes" thread-count="3">

3. At the test level
<suite name="Grouping Test" parallel="tests" thread-count="3">


